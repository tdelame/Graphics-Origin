# ifndef GRAPHICS_ORIGIN_PROJECT_H_
# define GRAPHICS_ORIGIN_PROJECT_H_

/**
 * A set of macros. Some of them come from this blog article:
 * https://blog.molecular-matters.com/2011/07/22/an-improved-assert/
 */

# define GRAPHICS_ORIGIN_MAJOR @Graphics-Origin_VERSION_MAJOR@
# define GRAPHICS_ORIGIN_MINOR @Graphics-Origin_VERSION_MINOR@

# include <float.h>
# define REAL_MIN DBL_MIN
# define REAL_MAX DBL_MAX

# ifdef _WIN32
#  ifdef GO_EXPORTS
#   define GO_API __declspec(dllexport)
#  else
#   define GO_API __declspec(dllimport)
#  endif
# else
#  define GO_API
# endif

# ifdef _WIN32
#  define GO_BREAK __debugbreak()
# else
#  include <csignal>
#  // The program will be stopped, and can be continued in gdb by typing continue
#  define GO_BREAK std::raise(SIGINT)
# endif

#if _MSC_VER >= 1400
# define GO_PP_PASS_ARGS_LEFT (
# define GO_PP_PASS_ARGS_RIGHT )
# define GO_PP_PASS_ARGS(...)  GO_PP_PASS_ARGS_LEFT __VA_ARGS__ GO_PP_PASS_ARGS_RIGHT
#else
# define GO_PP_PASS_ARGS(...)  (__VA_ARGS__)
#endif

# define GO_JOIN_HELPER_HELPER x##y
# define GO_JOIN_HELPER( x, y ) GO_JOIN_HELPER_HELPER( x, y )
# define GO_PP_JOIN( x, y ) GO_JOIN_HELPER( x, y )
# undef GO_JOIN_HELPER
# undef GO_JOIN_HELPER_HELPER

# define GO_VA_NUM_ARGS_HELPER(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, N, ...)    N
# define GO_PP_VA_NUM_ARGS(...)  GO_VA_NUM_ARGS_HELPER(__VA_ARGS__, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
# undef GO_VA_NUM_ARGS_HELPER


# define GO_NAMESPACE graphics_origin
# define BEGIN_GO_NAMESPACE namespace GO_NAMESPACE {
# define END_GO_NAMESPACE }
BEGIN_GO_NAMESPACE
typedef double real;
typedef float gpu_real;
END_GO_NAMESPACE

#cmakedefine GO_USE_OPENMP
#cmakedefine GO_USE_OPENCL
# endif
